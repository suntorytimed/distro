#!/usr/bin/env bash
set -e

######################################################################
# This script installs required dependencies for Torch7
######################################################################
if [[ "$(uname)" == 'Linux' ]]; then
    if [[ -r /etc/os-release ]]; then
        # this will get the required information without dirtying any env state
        DIST_VERS="$( ( . /etc/os-release &>/dev/null
                        echo "$ID $VERSION_ID") )"
        DISTRO="${DIST_VERS%% *}" # get our distro name
        VERSION="${DIST_VERS##* }" # get our version number
        VERSION="${DIST_VERS##* }" # get our version number
    else # well, I'm out of ideas for now
        echo '==> Failed to determine distro and version.'
        exit 1
    fi

    # Detect Alpine
    if [[ "$DISTRO" = "alpine" ]]; then
        distribution="alpine"
        alpine_major_version="$VERSION"
    else
        echo '==> Only Alpine is supported.'
        exit 1
    fi

    # Install dependencies for Torch:
    if [[ $distribution == 'alpine' ]]; then
        apk add cmake imagemagick ncurses-dev ipython gnuplot-x11 gnuplot unzip curl \
            libqt4-dev libjpeg-dev libzmq3-dev gfortran libpng-dev libreadline-dev \
            build-essential
    fi
else
    # Unsupported
    echo '==> platform not supported, aborting'
    exit 1
fi

ipython_exists=$(command -v ipython) || true
if [[ $ipython_exists ]]; then
    ipython_version=$(ipython --version|cut -f1 -d'.')
    if [[ $ipython_version -lt 2 ]]; then 
        echo 'WARNING: Your ipython version is too old.  Type "ipython --version" to see this.  Should be at least version 2'
    fi
fi

# Done.
echo "==> Torch7's dependencies have been installed"
